1.MySQL数据库的复制原理及流程
 - 主库将数据改变记录到二进制日志中
 - 备库通过I/O线程读取主库的二进制日志并存入到自己的中继日志
 - 备库重做中继日志中的事件
 
2.数据库的隔离级别及引发的问题
 - 隔离级别由低到高：读未提交(读不加s锁)、读已提交(读加s锁，语句执行完后释放)、可重复读(读加s锁，事务执行完后释放锁)、串行化(添加锁的范围)
 - 脏读：一个事物读取了另一个事物未提交事务中的数据
 - 不可重复读：一个事物范围内多次查询返回不同的数据
 - 幻读：事务A修改了数据，事务B也修改了数据，导致A看起来与自己修改的不一致
 
 - 级别     脏读  不可重复读  幻读
  读未提交   有      有       有
  读已提交   无      有       有
  可重复读   无      无       有
  串行化     无      无       无
  
 - MySQL默认级别是可重复读，SQLServer、Oracle默认是读已提交级别
 
 - 行锁、页锁(锁定相邻行)、表锁，innoDB引擎默认对update,delete,insert加排他锁,select语句默认不加锁
 - 悲观锁(抽象性，不真实存在)：每次取数据之前都会先加锁，利用数据库本身提供的锁机制实现，行锁，表锁，共享锁，排他锁都是这种锁机制，用于写较多
 - 乐观锁(抽象性，不真实存在)：默认别的线程不会修改数据，不会上锁，常用版本号、时间戳来实现，若版本号不一致，交给业务层处理，用于写较少
 
 3.MYSQL的两种存储引擎区别（事务、锁级别等等），各自的适用场景 
   - InnoDB支持事务，适用于大量的修改操作的应用，提高并发操作
   - MyISAM不支持事务，适用于大量的查询操作
   区别：
   - InnoDB事务安全型，支持外键，支持行级锁定，不支持全文索引，更安全，MYSQL默认是InnoDB
   - MyISAM非事务安全性，不支持外键，支持表级锁定，支持全文索引，更简单，效率更高，小型应用
   
  4.MySQL查看sql执行计划
    - explain + sql语句
    - 数据库的优化(影响越来越小)：
      1.尽量使用索引，最左匹配原则
      2.sql语句优化，如简化查询字段，没用的字段不要，子查询变成连接查询，避免嵌套查询，
        尽量使用PreparedStatement(预编译后缓存下来方便后面重复使用)而不是Statement
      3.数据库表结构优化，少用外键，避免连接查询
      4.系统配置优化
      5.硬件优化
  5.建立了索引却没有使用?
     - 查询条件中有or(若想用or和索引，则每列都建立索引)
     - 查询中有like模糊查询
     - 出现了数据类型的隐示转换，如字符型不加引号变成int
     - 全表扫描的时间比扫描索引时间小
     
  6.数据库连接池
     - 原理：在内部对象池中，维护一定数量的数据库连接，使用者通过getConnection方法获取数据库连接，使用完毕后再通过releaseConnection方法将连接返回
     - 作用：连接资源重用，里面频繁创建、释放链接，有更快的响应速度，统一管理
    
  7.如何设计高并发系统？
     - 数据库的优化，包括合理的事务隔离级别、SQL语句优化、索引的优化；
     - 使用缓存，尽量减少数据库 IO；
     - 分布式数据库、分布式缓存；
     - 服务器的负载均衡；
    
  常见SQL面试
  
   查询出每门课都大于80 分的学生姓名
   select name from student group by name having min(grade)>80
   select distinct name from student where name not in(select distinct name from student where grade<=80 )
   
   删除除了自动编号不同, 其他都相同的学生冗余信息
   delete from student where autoid not in (select min(autoid) from student group by name,course,grade)
   
   两张关联表，删除主表a中已经在副表b中没有的信息
   delete from a where a.id not in(select * from b where a.id=b.id)
   
   从a复制表数据到b
   insert into b(col1,col2)values(,)
   insert into b select * from a
   insert into b(col1,col2) select col1,col2 from a
   
   查询所有信息，列出前25%的记录
   select top 25 percent *from stu(SQLServer才有top percent)
   select * from stu where rownum<=(select count(*)/4 from stu)
   
   一个叫 team 的表，里面只有一个字段name, 一共有4 条纪录，分别是a,b,c,d, 对应四个球对，现在四个球对进行比赛，用一条sql 语句显示所有可能的比赛组合
   select a.name,b.name from team a,team b where a.name<b.name
   
   怎么把这样一个表儿
   year month amount
   1991 1 1.1
   1991 2 1.2
   1991 3 1.3
   1991 4 1.4
   1992 1 2.1
   1992 2 2.2
   1992 3 2.3
   1992 4 2.4
   查成这样一个结果
   year m1 m2 m3 m4
   1991 1.1 1.2 1.3 1.4
   1992 2.1 2.2 2.3 2.4
   select distinct year,
   (select amount from a b where month=1 and b.year=a.year) as m1,
   (select amount from a b where month=2 and b.year=a.year) as m2,
   (select amount from a b where month=3 and b.year=a.year) as m3,
   (select amount from a b where month=4 and b.year=a.year) as m4
   from a order by year desc
   
   有一张表，里面有3个字段：语文，数学，英语。其中有3条记录分别表示语文70分，数学80分，英语58分，请用一条sql语句查询出这三条记录并按以下条件显示出来（并写出您的思路）： 
   大于或等于80表示优秀，大于或等于60表示及格，小于60分表示不及格。 
   显示格式： 
   语文 数学 英语 
   及格 优秀 不及格 
   select (case when 语文>=80 then '优秀'
   when 语文>=60 then '及格'
   else '不及格')as 语文 ,
   (case when 数学>=80 then '优秀'
   when 数学>=60 then '及格'
   else '不及格')as 数学,
   (case when 英语>=80 then '优秀'
   when 英语>=60 then '及格'
   else '不及格')as 英语 from grade
  
   查询a(ID,Name)表中第31至40条记录，ID作为主键可能是不是连续增长的列
   select top 10 * from a where id>(select max(id) from (select top 30 id from a))

   随机取出10条数据
   SQL Server:
   select top 10 * from a order by newid()
   Oracle:
   select * from a order by rand() limit 10
   
   有两个表A和B ，均有key和value两个字段，如果B的key在A中也有，就把B的value换为A中对应的value
   update b set b.value=(select a.value where b.key=a.key)where b.key in (select b.key from b,a where b.key=a.key)
