1.MySQL数据库的复制原理及流程
 - 主库将数据改变记录到二进制日志中
 - 备库通过I/O线程读取主库的二进制日志并存入到自己的中继日志
 - 备库重做中继日志中的事件
 
2.数据库的隔离级别及引发的问题
 - 隔离级别由低到高：读未提交(读不加s锁)、读已提交(读加s锁，语句执行完后释放)、可重复读(读加s锁，事务执行完后释放锁)、串行化(添加锁的范围)
 - 脏读：一个事物读取了另一个事物未提交事务中的数据
 - 不可重复读：一个事物范围内多次查询返回不同的数据
 - 幻读：事务A修改了数据，事务B也修改了数据，导致A看起来与自己修改的不一致
 
 - 级别     脏读  不可重复读  幻读
  读未提交   有      有       有
  读已提交   无      有       有
  可重复读   无      无       有
  串行化     无      无       无
  
 - MySQL默认级别是可重复读，SQLServer、Oracle默认是读已提交级别
 
 - 行锁、页锁(锁定相邻行)、表锁，innoDB引擎默认对update,delete,insert加排他锁,select语句默认不加锁
 - 悲观锁(抽象性，不真实存在)：每次取数据之前都会先加锁，行锁，表锁，共享锁，排他锁都是这种锁机制，用于写较多
 - 乐观锁(抽象性，不真实存在)：默认别的线程不会修改数据，不会上锁，常用版本号、时间戳来实现，若版本号不一致，交给业务层处理，用于写较少
 
 
 
 
 3.MYSQL的两种存储引擎区别（事务、锁级别等等），各自的适用场景 
   - InnoDB支持事务，适用于大量的修改操作的应用，提高并发操作
   - MyISAM不支持事务，适用于大量的查询操作
   区别：
   - InnoDB事务安全型，支持外键，支持行级锁定，不支持全文索引，更安全，MYSQL默认是InnoDB
   - MyISAM非事务安全性，不支持外键，支持表级锁定，支持全文索引，更简单，效率更高，小型应用
   
  4.MySQL查看sql执行计划
    - explain + sql语句
    -数据库的优化：
      1.尽量使用索引，最左匹配原则
      2.sql语句优化，如简化查询字段，没用的字段不要，子查询变成连接查询，避免嵌套查询，
        尽量使用PreparedStatement(预编译后缓存下来方便后面重复使用)而不是Statement
      
  5.数据库连接池
    - 原理：在内部对象池中，维护一定数量的数据库连接，使用者通过getConnection方法获取数据库连接，使用完毕后再通过releaseConnection方法将连接返回
    - 作用：连接资源重用，里面频繁创建、释放链接，有更快的响应速度，统一管理
     
    
      
 
 
